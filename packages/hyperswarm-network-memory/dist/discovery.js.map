{"version":3,"sources":["../src/discovery.js"],"names":["Discovery","constructor","_peersByTopic","Map","lookup","peerId","topic","bufferTopic","cb","peers","hexTopic","toString","has","get","set","forEach","remoteCallback","remotePeerId","socketOne","Socket","socketTwo","setRemote","process","nextTick","destroyed","id","type","client","peer","leave","delete"],"mappings":";;;;;;;AAIA;;;;AAJA;AACA;AACA;AAIA,MAAMA,SAAN,CAAgB;AACdC,EAAAA,WAAW,GAAG;AACZ,SAAKC,aAAL,GAAqB,IAAIC,GAAJ,EAArB;AACD;;AAEDC,EAAAA,MAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAK,EAAEC;AAAjB,GAAD,EAAiCC,EAAjC,EAAqC;AACzC,QAAIC,KAAJ;AACA,UAAMC,QAAQ,GAAGH,WAAW,CAACI,QAAZ,CAAqB,KAArB,CAAjB;;AAEA,QAAI,KAAKT,aAAL,CAAmBU,GAAnB,CAAuBF,QAAvB,CAAJ,EAAsC;AACpCD,MAAAA,KAAK,GAAG,KAAKP,aAAL,CAAmBW,GAAnB,CAAuBH,QAAvB,CAAR;AACD,KAFD,MAEO;AACLD,MAAAA,KAAK,GAAG,IAAIN,GAAJ,EAAR;;AACA,WAAKD,aAAL,CAAmBY,GAAnB,CAAuBJ,QAAvB,EAAiCD,KAAjC;AACD;;AAED,QAAIA,KAAK,CAACG,GAAN,CAAUP,MAAV,CAAJ,EAAuB;AACrB;AACD;;AAEDI,IAAAA,KAAK,CAACM,OAAN,CAAc,CAACC,cAAD,EAAiBC,YAAjB,KAAkC;AAC9C,YAAMC,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AACA,YAAMC,SAAS,GAAG,IAAID,eAAJ,EAAlB;AACAD,MAAAA,SAAS,CAACG,SAAV,CAAoBD,SAApB;AAEAE,MAAAA,OAAO,CAACC,QAAR,CAAiB,MAAM;AACrB,YAAIL,SAAS,CAACM,SAAd,EAAyB;AAEzBhB,QAAAA,EAAE,CAACU,SAAD,EAAY;AACZO,UAAAA,EAAE,EAAER,YADQ;AAEZS,UAAAA,IAAI,EAAE,KAFM;AAGZC,UAAAA,MAAM,EAAE,IAHI;AAGE;AACdC,UAAAA,IAAI,EAAE;AACJtB,YAAAA,KAAK,EAAEC;AADH;AAJM,SAAZ,CAAF;AAQD,OAXD;AAaAe,MAAAA,OAAO,CAACC,QAAR,CAAiB,MAAM;AACrB,YAAIH,SAAS,CAACI,SAAd,EAAyB;AAEzBR,QAAAA,cAAc,CAACI,SAAD,EAAY;AACxBK,UAAAA,EAAE,EAAEpB,MADoB;AAExBqB,UAAAA,IAAI,EAAE,KAFkB;AAGxBC,UAAAA,MAAM,EAAE,KAHgB;AAIxBC,UAAAA,IAAI,EAAE;AACJtB,YAAAA,KAAK,EAAEC;AADH;AAJkB,SAAZ,CAAd;AAQD,OAXD;AAYD,KA9BD;AAgCAE,IAAAA,KAAK,CAACK,GAAN,CAAUT,MAAV,EAAkBG,EAAlB;AACD;;AAEDqB,EAAAA,KAAK,CAAC;AAAExB,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAoB;AACvB,UAAMI,QAAQ,GAAGJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAjB;;AAEA,QAAI,CAAC,KAAKT,aAAL,CAAmBU,GAAnB,CAAuBF,QAAvB,CAAL,EAAuC;AACrC;AACD;;AAED,UAAMD,KAAK,GAAG,KAAKP,aAAL,CAAmBW,GAAnB,CAAuBH,QAAvB,CAAd;;AACAD,IAAAA,KAAK,CAACqB,MAAN,CAAazB,MAAb;AACD;;AAhEa","sourcesContent":["//\n// Copyright 2019 Wireline, Inc.\n//\n\nimport Socket from './socket';\n\nclass Discovery {\n  constructor() {\n    this._peersByTopic = new Map();\n  }\n\n  lookup({ peerId, topic: bufferTopic }, cb) {\n    let peers;\n    const hexTopic = bufferTopic.toString('hex');\n\n    if (this._peersByTopic.has(hexTopic)) {\n      peers = this._peersByTopic.get(hexTopic);\n    } else {\n      peers = new Map();\n      this._peersByTopic.set(hexTopic, peers);\n    }\n\n    if (peers.has(peerId)) {\n      return;\n    }\n\n    peers.forEach((remoteCallback, remotePeerId) => {\n      const socketOne = new Socket();\n      const socketTwo = new Socket();\n      socketOne.setRemote(socketTwo);\n\n      process.nextTick(() => {\n        if (socketOne.destroyed) return;\n\n        cb(socketOne, {\n          id: remotePeerId,\n          type: 'tcp',\n          client: true, // Boolean. If true, the connection was initiated by this node.\n          peer: {\n            topic: bufferTopic\n          }\n        });\n      });\n\n      process.nextTick(() => {\n        if (socketTwo.destroyed) return;\n\n        remoteCallback(socketTwo, {\n          id: peerId,\n          type: 'tcp',\n          client: false,\n          peer: {\n            topic: bufferTopic\n          }\n        });\n      });\n    });\n\n    peers.set(peerId, cb);\n  }\n\n  leave({ peerId, topic }) {\n    const hexTopic = topic.toString('hex');\n\n    if (!this._peersByTopic.has(hexTopic)) {\n      return;\n    }\n\n    const peers = this._peersByTopic.get(hexTopic);\n    peers.delete(peerId);\n  }\n}\n\nexport { Discovery };\n"],"file":"discovery.js"}