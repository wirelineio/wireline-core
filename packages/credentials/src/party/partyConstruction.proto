//
// Copyright 2019 Wireline, Inc.
//

syntax = "proto3";
package dxos.party;

import "google/protobuf/any.proto";

message Signature {
  bytes signature = 1;
  bytes key = 2;
}

// The containing type for all the following messages.
message SignedMessage {
  string bucket_id = 1;
  google.protobuf.Any signed = 2;
  repeated Signature signatures = 3;
}

// The start-of-authority record for the Party, admitting a single
// key (usually a pseudonym) and a single feed.  It must be signed by
// all three keys (party, key, feed). The Party private key should be
// destroyed after signing this message.
message PartyGenesis {
  string type = 1;  // party.genesis
  bytes party = 2;  // The party public key.
  bytes feed = 3;   // The initial feed to admit.
  bytes admit = 4;  // The key to admit (usually a pseudonym key).
  bytes nonce = 5;
  double created = 6; // TODO(telackey): This is wrong, we should use Timestamp ASAP: https://github.com/protobufjs/protobuf.js/pull/1258
}

// Admit a single key to the Party. This message must be signed by the key
// to be admitted, and unless the contents of an Envelope, also by a key
// which has already been admitted.
message KeyAdmit {
  string type = 1;  // party.admit.key
  bytes party = 2;
  bytes admit = 3;  // The key to admit.
  bytes nonce = 4;
  double created = 5; // TODO(telackey): This is wrong, we should use Timestamp ASAP: https://github.com/protobufjs/protobuf.js/pull/1258
}

// Admit a single feed to the Party. This message must be signed by the feed
// key to be admitted, also by some other key which has already been admitted
// (usually by a device pseudonym key).
message FeedAdmit {
  string type = 1;  // party.admit.feed
  bytes party = 2;
  bytes feed = 3;   // The feed public key.
  bytes nonce = 4;
  double created = 5; // TODO(telackey): This is wrong, we should use Timestamp ASAP: https://github.com/protobufjs/protobuf.js/pull/1258
}

// The start-of-authority record for the Feed, signed by the owner of the feed
// and the feed.  The owner must be a key previously admitted to the Party.
message FeedGenesis {
  string type = 1;  // party.admit.feed
  bytes feed = 2;   // The feed public key.
  bytes owner = 3;  // The public key of the owner of this feed.
  bytes nonce = 4;
  double created = 5; // TODO(telackey): This is wrong, we should use Timestamp ASAP: https://github.com/protobufjs/protobuf.js/pull/1258
}

// A signed message containing a signed message.  This is used by a Greeter to write,
// and sign using its key, a message provided to it, signed by the Invitee to the Party.
// The signature on the Envelope is that of the Greeter, while the signature(s) on
// the interior message are those of the Invitee, demonstrating ownership by the Invitee
// of the keys or feeds to be admitted.  The interior message can only be of types:
//    party.admit.key
//    party.admit.feed
// Any other message type (eg, party.genesis) is invalid and must be rejected.
message Envelope {
  string type = 1;  // party.envelope
  google.protobuf.Any contents = 2;
  bytes nonce = 3;
  double created = 4; // TODO(telackey): This is wrong, we should use Timestamp ASAP: https://github.com/protobufjs/protobuf.js/pull/1258
}

message GreeterCommand {
  string token = 1;
  bytes party = 2;
  string command = 3;
  repeated google.protobuf.Any params = 4;
};

